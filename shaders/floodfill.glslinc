uniform sampler2D shadowcolor0;
uniform sampler2D shadowtex0;

uniform sampler2D gaux1;

#include "voxelize.glslinc"

void main()
{
    ivec2 iuv = ivec2(gl_FragCoord.st);

    if (iuv.x >= volume_width * volume_depth_grid_width || iuv.y >= volume_height * volume_depth_grid_height) return;

    ivec3 world_pos = planar2volume(iuv);
    ivec2 planar_pos = volume2planar(world_pos);

    float voxel_solid = texelFetch(shadowcolor0, planar_pos, 0).a < 1.0 ? 1.0 : 0.0;

    vec3 voxel_color = texelFetch(gaux1, planar_pos, 0).rgb;

    if (voxel_solid < 1.0)
    {
        const float multiplier[10] = {
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,

            0.7,
            0.7,
            0.7,
            0.7
        };

        const ivec3 fill_offsets[10] = {
            ivec3(-1, 0, 0),
            ivec3( 1, 0, 0),
            ivec3( 0,-1, 0),
            ivec3( 0, 1, 0),
            ivec3( 0, 0,-1),
            ivec3( 0, 0, 1),

            ivec3(-1, 0,-1),
            ivec3( 1, 0,-1),
            ivec3(-1, 0, 1),
            ivec3( 1, 0, 1),

        };

        for (int i = 0; i < 6; i++)
        {
            ivec3 world_pos_sample = world_pos + fill_offsets[i];
            ivec2 planar_pos_sample = volume2planar(world_pos_sample);

            if (planar_pos_sample == ivec2(-1)) continue;

            vec3 sample_color = texelFetch(gaux1, planar_pos_sample, 0).rgb;
            vec4 sample_voxel_color = texelFetch(shadowcolor0, planar_pos_sample, 0).rgba;
            float sample_attribute = texelFetch(shadowtex0, planar_pos_sample, 0).r;

            bool sample_is_emmisive = sample_attribute.r == 0.55;
            bool sample_is_air = sample_voxel_color.a == 1.0;

            if (sample_is_air) sample_color.rgb *= sample_voxel_color.rgb;

            voxel_color = max(voxel_color, (sample_is_emmisive || sample_is_air) ? sample_color.rgb * 0.5 * multiplier[i] : vec3(0.0));
        }
    }

    gl_FragData[0] = vec4(voxel_color, voxel_solid);

    #ifdef FINAL_PROP
    if (voxel_solid != 1.0)
    {
        gl_FragData[1] = vec4(voxel_color * texelFetch(shadowcolor0, planar_pos, 0).rgb * 0.1, voxel_solid);
    }
    #endif
}